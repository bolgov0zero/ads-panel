<?php

$db_path = '/data/ads.db';
$check_interval = 10; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
$offline_threshold = 5; // –ü–æ—Ä–æ–≥ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω-—Å—Ç–∞—Ç—É—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
$log_file = '/var/log/client-monitor.log'; // –ï–¥–∏–Ω—ã–π —Ñ–∞–π–ª –ª–æ–≥–∞ –¥–ª—è stdout –∏ stderr
$version_check_interval = 60; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (1 –º–∏–Ω—É—Ç–∞)

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function logMessage($message) {
    global $log_file;
    $timestamp = date('Y-m-d H:i:s');
    file_put_contents($log_file, "[$timestamp] $message\n", FILE_APPEND);
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
function sendTelegramMessage($botToken, $chatId, $message) {
    global $log_file;
    if (empty($botToken) || empty($chatId)) {
        logMessage("–û—à–∏–±–∫–∞: Bot Token –∏–ª–∏ Chat ID –Ω–µ —É–∫–∞–∑–∞–Ω—ã");
        return false;
    }
    $url = "https://api.telegram.org/bot$botToken/sendMessage";
    $data = [
        'chat_id' => $chatId,
        'text' => $message,
        'parse_mode' => 'HTML'
    ];
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    if ($httpCode !== 200) {
        logMessage("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: HTTP $httpCode, –û—Ç–≤–µ—Ç: $response");
        return false;
    }
    logMessage("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: $message");
    return true;
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
function checkForNewVersion($db) {
    global $log_file, $version_check_interval;

    // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
    $local_version_file = '/var/www/html/version';
    if (!file_exists($local_version_file)) {
        logMessage("–û—à–∏–±–∫–∞: –§–∞–π–ª –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $local_version_file");
        return;
    }
    $local_version_raw = trim(file_get_contents($local_version_file));
    $local_version = ltrim($local_version_raw, 'v'); // –£–±–∏—Ä–∞–µ–º 'v' –¥–ª—è version_compare

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é —Å GitHub
    $github_url = 'https://raw.githubusercontent.com/bolgov0zero/ads-panel/refs/heads/main/version';
    $ch = curl_init($github_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    $github_version_raw = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($httpCode !== 200 || empty($github_version_raw)) {
        logMessage("–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–µ—Ä—Å–∏–∏ —Å GitHub: HTTP $httpCode");
        return;
    }

    $github_version = ltrim(trim($github_version_raw), 'v'); // –£–±–∏—Ä–∞–µ–º 'v'

    logMessage("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π: –õ–æ–∫–∞–ª—å–Ω–∞—è '$local_version_raw', GitHub '$github_version_raw'");

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    $stmt = $db->prepare("SELECT last_notified_version, last_check_time FROM version_notifications WHERE id = 1");
    $result = $stmt->execute();
    $row = $result->fetchArray(SQLITE3_ASSOC);
    $last_notified_version = $row['last_notified_version'] ?? '';
    $last_check_time = (int)($row['last_check_time'] ?? 0);

    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if (time() - $last_check_time < $version_check_interval) {
        return;
    }

    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏
    if (version_compare($github_version, $local_version) > 0 && $github_version !== $last_notified_version) {
        // –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è! –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $message = "üÜï –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è!\n–õ–æ–∫–∞–ª—å–Ω–∞—è: <b>$local_version_raw</b>\nGitHub: <b>$github_version_raw</b>";

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
        $stmt = $db->prepare("SELECT bot_token, chat_id FROM telegram_settings WHERE id = 1");
        $result = $stmt->execute();
        $telegram_settings = $result->fetchArray(SQLITE3_ASSOC);
        $bot_token = $telegram_settings['bot_token'] ?? '';
        $chat_id = $telegram_settings['chat_id'] ?? '';

        if (!empty($bot_token) && !empty($chat_id)) {
            if (sendTelegramMessage($bot_token, $chat_id, $message)) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ë–î: —É–≤–µ–¥–æ–º–∏–ª–∏ –∏ –æ—Ç–º–µ—Ç–∏–ª–∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                $update_stmt = $db->prepare("UPDATE version_notifications SET last_notified_version = :version, last_check_time = :time WHERE id = 1");
                $update_stmt->bindValue(':version', $github_version_raw, SQLITE3_TEXT);
                $update_stmt->bindValue(':time', time(), SQLITE3_INTEGER);
                $update_stmt->execute();
                logMessage("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: $github_version_raw");
            }
        } else {
            logMessage("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram");
        }
    }

    // –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    $update_stmt = $db->prepare("UPDATE version_notifications SET last_check_time = :time WHERE id = 1");
    $update_stmt->bindValue(':time', time(), SQLITE3_INTEGER);
    $update_stmt->execute();
}

try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    $db = new SQLite3($db_path);
    $db->busyTimeout(5000);
    logMessage("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ");

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    $stmt = $db->prepare("SELECT bot_token, chat_id FROM telegram_settings WHERE id = 1");
    $result = $stmt->execute();
    $telegram_settings = $result->fetchArray(SQLITE3_ASSOC);
    $bot_token = $telegram_settings['bot_token'] ?? '';
    $chat_id = $telegram_settings['chat_id'] ?? '';
    logMessage("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram: bot_token=" . ($bot_token ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ø—É—Å—Ç–æ–π') . ", chat_id=" . ($chat_id ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ø—É—Å—Ç–æ–π'));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    if (empty($bot_token) || empty($chat_id)) {
        logMessage("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è");
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    $previous_statuses = [];

    while (true) {
        logMessage("–ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤");

        // –ù–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É
        checkForNewVersion($db);

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        $result = $db->query("SELECT uuid, name, COALESCE(last_seen, 0) AS last_seen FROM clients");
        $clients = [];
        while ($row = $result->fetchArray(SQLITE3_ASSOC)) {
            $row['last_seen'] = (int)$row['last_seen'];
            $row['status'] = (time() - $row['last_seen'] <= $offline_threshold) ? 'online' : 'offline';
            $clients[$row['uuid']] = $row;
        }
        logMessage("–ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: " . count($clients));

        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
        foreach ($clients as $uuid => $client) {
            $previous_status = $previous_statuses[$uuid] ?? null;
            logMessage("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ UUID: $uuid, –ò–º—è: {$client['name']}, –°—Ç–∞—Ç—É—Å: {$client['status']}, –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: {$client['last_seen']}");
            if ($previous_status !== null && $previous_status !== $client['status']) {
                // –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
                if ($client['status'] === 'online') {
                    $message = "–°—Ç–∞—Ç—É—Å: üü¢ –≤ —Å–µ—Ç–∏\n–ò–º—è: <b>{$client['name']}</b>\nUUID: <code>{$uuid}</code>";
                } else {
                    $message = "–°—Ç–∞—Ç—É—Å: üî¥ –Ω–µ –≤ —Å–µ—Ç–∏\n–ò–º—è: <b>{$client['name']}</b>\nUUID: <code>{$uuid}</code>";
                }
                logMessage("–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è UUID: $uuid, –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {$client['status']}, –°–æ–æ–±—â–µ–Ω–∏–µ: $message");
                if (!empty($bot_token) && !empty($chat_id)) {
                    sendTelegramMessage($bot_token, $chat_id, $message);
                } else {
                    logMessage("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram");
                }
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã
        $previous_statuses = [];
        foreach ($clients as $uuid => $client) {
            $previous_statuses[$uuid] = $client['status'];
        }

        // –ñ–¥—ë–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        logMessage("–û–∂–∏–¥–∞–Ω–∏–µ $check_interval —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏");
        sleep($check_interval);
    }
} catch (Exception $e) {
    logMessage("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage());
} finally {
    if (isset($db)) {
        $db->close();
        logMessage("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ");
    }
}
?>